-- Etapa 1 do JOB
-- Excluindo dados anteriores da tabela de carga_temporaria
TRUNCATE TABLE carga_temporaria;

-- Inserindo dados na tabela de carga temporaria que estão no arquivo CSV
BULK INSERT carga_temporaria
FROM 'C:\Users\User\Desktop\Faculdade\carga.csv'
WITH (
    FIELDTERMINATOR = ';',
    ROWTERMINATOR = '\n',
    FIRSTROW = 2 
);

-- Etapa 2 do JOB
-- Transferência de dados para a tabela Pedidos
INSERT INTO Pedidos (purchase_date, payments_date, buyer_email, buyer_name, cpf, buyer_phone_number, ship_service_level, recipient_name, ship_address_1, ship_address_2, ship_address_3, ship_city, ship_state, ship_postal_code, ship_country, ioss_number)
SELECT purchase_date, payments_date, buyer_email, buyer_name, cpf, buyer_phone_number, ship_service_level, recipient_name, ship_address_1, ship_address_2, ship_address_3, ship_city, ship_state, ship_postal_code, ship_country, ioss_number
FROM carga_temporaria;

-- Etapa 3 do JOB
-- Transferência de dados para a tabela Clientes (Atualização ou inserção)
MERGE INTO Clientes AS target
USING (
    SELECT cpf, buyer_email, buyer_name, buyer_phone_number
    FROM carga_temporaria
) AS source ON target.cpf = source.cpf
WHEN MATCHED THEN
    UPDATE SET 
        target.buyer_email = source.buyer_email,
        target.buyer_name = source.buyer_name,
        target.buyer_phone_number = source.buyer_phone_number
WHEN NOT MATCHED BY TARGET THEN
    INSERT (cpf, buyer_email, buyer_name, buyer_phone_number)
    VALUES (source.cpf, source.buyer_email, source.buyer_name, source.buyer_phone_number);

-- Etapa 4 do JOB
-- Transferência de dados para a tabela Produtos (Atualização ou inserção com decremento de quantidade)
MERGE INTO Produtos AS target
USING carga_temporaria AS source ON target.sku = source.sku
WHEN MATCHED THEN
    UPDATE SET 
        target.product_name = source.product_name,
        target.quantity = target.quantity - source.quantity_purchased, -- Diminui a quantidade pela quantidade comprada
        target.currency = source.currency,
        target.item_price = source.item_price
WHEN NOT MATCHED BY TARGET THEN
    INSERT (sku, product_name, quantity, currency, item_price)
    VALUES (source.sku, source.product_name, 25, source.currency, source.item_price);

-- Etapa 5 do JOB
-- Subetapa 5.1: Transferência de dados para a tabela MovimentacaoEstoque (registrando a diminuição de quantidade)
INSERT INTO MovimentacaoEstoque (sku, quantidade)
SELECT sku, -quantity_purchased -- Quantidade negativa para refletir a diminuição
FROM carga_temporaria;

-- Etapa 6: Verificar quantidade zero e registrar nova compra
INSERT INTO Compras (sku, quantidade)
SELECT sku, 25 
FROM Produtos
WHERE quantity = 0;

-- Etapa 7 do JOB
-- Atualização dos campos na tabela "ItensPedido"
UPDATE ip
SET 
    ip.order_id = p.order_id,
    ip.sku = ct.sku,
    ip.quantity_purchased = ct.quantity_purchased
FROM 
    ItensPedido ip
INNER JOIN 
    Pedidos p ON ip.order_id = p.order_id
INNER JOIN 
    carga_temporaria ct ON ct.sku = ip.sku
WHERE
    ct.quantity_purchased = ip.quantity_purchased;
